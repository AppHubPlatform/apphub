{
  "name": "dargs",
  "version": "4.0.1",
  "description": "Reverse minimist. Convert an object of options into an array of command-line arguments.",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/dargs.git"
  },
  "keywords": [
    "options",
    "arguments",
    "args",
    "flags",
    "cli",
    "nopt",
    "minimist",
    "bin",
    "binary",
    "command",
    "cmd",
    "reverse",
    "inverse",
    "opposite",
    "invert",
    "switch",
    "construct",
    "parse",
    "parser",
    "argv"
  ],
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "scripts": {
    "test": "node test.js"
  },
  "dependencies": {
    "number-is-nan": "^1.0.0"
  },
  "devDependencies": {
    "array-equal": "^1.0.0",
    "ava": "^0.0.4"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "readme": "# dargs [![Build Status](https://travis-ci.org/sindresorhus/dargs.svg?branch=master)](https://travis-ci.org/sindresorhus/dargs)\n\n> Reverse [`minimist`](https://github.com/substack/minimist). Convert an object of options into an array of command-line arguments.\n\nUseful when spawning command-line tools.\n\n\n## Install\n\n```\n$ npm install --save dargs\n```\n\n\n#### Usage\n\n```js\nvar dargs = require('dargs');\n\nvar input = {\n\tfoo: 'bar',\n\thello: true,                    // results in only the key being used\n\tcake: false,                    // prepends `no-` before the key\n\tcamelCase: 5,                   // camelCase is slugged to `camel-case`\n\tmultiple: ['value', 'value2'],  // converted to multiple arguments\n\tsad: ':('\n};\n\nvar excludes = ['sad'];\nvar includes = ['camelCase', 'multiple', 'sad'];\n\nconsole.log(dargs(input, {excludes: excludes}));\n/*\n[\n\t'--foo=bar',\n\t'--hello',\n\t'--no-cake',\n\t'--camel-case=5',\n\t'--multiple=value',\n\t'--multiple=value2'\n]\n*/\n\nconsole.log(dargs(input, {\n\texcludes: excludes,\n\tincludes: includes\n}));\n/*\n[\n\t'--camel-case=5',\n\t'--multiple=value',\n\t'--multiple=value2'\n]\n*/\n\n\nconsole.log(dargs(input, {includes: includes}));\n/*\n[\n\t'--camel-case=5',\n\t'--multiple=value',\n\t'--multiple=value2',\n\t'--sad=:(''\n]\n*/\n```\n\n## API\n\n### dargs(input, options)\n\n#### input\n\n*Required*  \nType: `object`\n\nObject to convert to command-line arguments.\n\n#### options\n\nType: `object`\n\n##### excludes\n\nType: `array`\n\nKeys to exclude. Takes precedence over `includes`.\n\n##### includes\n\nType: `array`\n\nKeys to include.\n\n##### ignoreFalse\n\nType: `boolean`  \nDefault: `false`\n\nDon't include `false` values. This is mostly useful when dealing with strict argument parsers that would throw on unknown arguments like `--no-foo`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/dargs/issues"
  },
  "homepage": "https://github.com/sindresorhus/dargs#readme",
  "_id": "dargs@4.0.1",
  "_shasum": "172ad43156f7837f85ec22e9dd7c46a6c093ef19",
  "_resolved": "https://registry.npmjs.org/dargs/-/dargs-4.0.1.tgz",
  "_from": "dargs@>=4.0.0 <5.0.0"
}
