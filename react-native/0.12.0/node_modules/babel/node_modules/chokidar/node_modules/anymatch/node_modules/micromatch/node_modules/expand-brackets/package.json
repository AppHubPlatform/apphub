{
  "name": "expand-brackets",
  "description": "Expand POSIX bracket expressions (character classes) in glob patterns.",
  "version": "0.1.4",
  "homepage": "https://github.com/jonschlinkert/expand-brackets",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/expand-brackets.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/expand-brackets/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "^2.2.5",
    "should": "^7.0.2"
  },
  "keywords": [
    "bracket",
    "character class",
    "expression",
    "posix"
  ],
  "verb": {
    "related": {
      "list": [
        "extglob",
        "micromatch",
        "is-glob",
        "is-extglob",
        "is-posix-bracket"
      ]
    }
  },
  "readme": "# expand-brackets [![NPM version](https://badge.fury.io/js/expand-brackets.svg)](http://badge.fury.io/js/expand-brackets)\n\n> Expand POSIX bracket expressions (character classes) in glob patterns.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i expand-brackets --save\n```\n\n## Usage\n\n```js\nvar brackets = require('expand-brackets');\n\nbrackets('[![:lower:]]');\n//=> '[^a-z]'\n```\n\n## .isMatch\n\nReturn true if the given string matches the bracket expression:\n\n```js\nbrackets.isMatch('A', '[![:lower:]]');\n//=> true\n\nbrackets.isMatch('a', '[![:lower:]]');\n//=> false\n```\n\n## .makeRe\n\nMake a regular expression from a bracket expression:\n\n```js\nbrackets.makeRe('[![:lower:]]');\n//=> /[^a-z]/\n```\n\nThe following named POSIX bracket expressions are supported:\n\n* `[:alnum:]`: Alphanumeric characters (`a-zA-Z0-9]`)\n* `[:alpha:]`: Alphabetic characters (`a-zA-Z]`)\n* `[:blank:]`: Space and tab (`[ t]`)\n* `[:digit:]`: Digits (`[0-9]`)\n* `[:lower:]`: Lowercase letters (`[a-z]`)\n* `[:punct:]`: Punctuation and symbols. (`[!\"#$%&'()*+, -./:;<=>?@ [\\]^_``{|}~]`)\n* `[:upper:]`: Uppercase letters (`[A-Z]`)\n* `[:word:]`: Word characters (letters, numbers and underscores) (`[A-Za-z0-9_]`)\n* `[:xdigit:]`: Hexadecimal digits (`[A-Fa-f0-9]`)\n\nCollating sequences are not supported.\n\n## Related projects\n\n* [extglob](https://github.com/jonschlinkert/extglob): Convert extended globs to regex-compatible strings. Add (almost) the expressive power of regular expressions to… [more](https://github.com/jonschlinkert/extglob)\n* [is-glob](https://github.com/jonschlinkert/is-glob): Returns `true` if the given string looks like a glob pattern.\n* [is-extglob](https://github.com/jonschlinkert/is-extglob): Returns true if a string has an extglob.\n* [is-posix-bracket](https://github.com/jonschlinkert/is-posix-bracket): Returns true if the given string is a POSIX bracket expression (POSIX character class).\n* [micromatch](https://github.com/jonschlinkert/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. Just… [more](https://github.com/jonschlinkert/micromatch)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/expand-brackets/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright © 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on August 01, 2015._",
  "readmeFilename": "README.md",
  "_id": "expand-brackets@0.1.4",
  "_shasum": "797b9e484101205f418cecaec6312c132f51e2ae",
  "_resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.4.tgz",
  "_from": "expand-brackets@>=0.1.1 <0.2.0"
}
