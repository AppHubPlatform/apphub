{
  "name": "object.omit",
  "description": "Return a copy of an object without the given key, or array of keys.",
  "version": "1.1.0",
  "homepage": "https://github.com/jonschlinkert/object.omit",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/object.omit.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/object.omit/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/object.omit/blob/master/LICENSE"
  },
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "keywords": [
    "clear",
    "delete",
    "key",
    "value",
    "object",
    "omit",
    "property",
    "remove"
  ],
  "dependencies": {
    "for-own": "^0.1.3",
    "isobject": "^1.0.0"
  },
  "devDependencies": {
    "mocha": "^2.2.4",
    "should": "^5.2.0"
  },
  "readme": "# object.omit [![NPM version](https://badge.fury.io/js/object.omit.svg)](http://badge.fury.io/js/object.omit)\n\n> Return a copy of an object without the given key, or array of keys.\n\n## Install\n```bash\nnpm i object.omit --save-dev\n```\n\n\n## Usage\n\n```js\nvar omit = require('object.omit');\n```\n\nPass a string `key` to omit:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'}, 'a')\n//=> { b: 'b', c: 'c' }\n```\n\nPass an array of `keys` to omit:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'}, ['a', 'c'])\n//=> { b: 'b' }\n```\n\nReturns the object if no keys are passed:\n\n```js\nomit({a: 'a', b: 'b', c: 'c'})\n//=> {a: 'a', b: 'b', c: 'c'}\n```\n\nReturns an empty object if no value is passed.\n\n```js\nomit()\n//=> {}\n```\n\n### Other awesome javascript/node.js utils\n * [object.filter](https://github.com/jonschlinkert/object.filter): Create a new object filtered to have only properties for which the callback returns true.\n * [object.pick](https://github.com/jonschlinkert/object.pick): Returns a filtered copy of an object with only the specified keys, like `pick` from lo-dash / underscore.\n * [object.pluck](https://github.com/jonschlinkert/object.pluck): Like pluck from underscore / lo-dash, but returns an object composed of specified properties, with values unmodified from those of the original object.\n * [object.reduce](https://github.com/jonschlinkert/object.reduce): Reduces an object to a value that is the accumulated result of running each property in the object through a callback.\n * [object.defaults](https://github.com/jonschlinkert/object.defaults): Like `extend` but only copies missing properties/values to the target object.\n\n## Runing tests\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/object.omit/issues)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014-2015 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on April 09, 2015._\n",
  "readmeFilename": "README.md",
  "_id": "object.omit@1.1.0",
  "_shasum": "9d17ea16778e5057deba7752c6f55f1496829e94",
  "_resolved": "https://registry.npmjs.org/object.omit/-/object.omit-1.1.0.tgz",
  "_from": "object.omit@>=1.1.0 <2.0.0"
}
