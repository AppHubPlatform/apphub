{
  "name": "babel-plugin-undefined-to-void",
  "version": "1.1.6",
  "description": "Replace references to `undefined` with `void 0`",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/babel-plugins/babel-plugin-undefined-to-void.git"
  },
  "license": "MIT",
  "main": "lib/index.js",
  "devDependencies": {
    "babel": "^5.6.0"
  },
  "scripts": {
    "build": "babel-plugin build",
    "push": "babel-plugin publish",
    "test": "babel-plugin test"
  },
  "keywords": [
    "babel-plugin"
  ],
  "readme": "# babel-plugin-undefined-to-void\n\nSome JavaScript implementations allow `undefined` to be overwritten, this\nmay lead to peculiar bugs that are extremely hard to track down.\n\nThis plugin transforms `undefined` into `void 0` which returns `undefined`\nregardless of if it's been reassigned.\n\n## Example\n\n**In**\n\n```javascript\nfoo === undefined;\n```\n\n**Out**\n\n```javascript\nfoo === void 0;\n```\n\n## Installation\n\n```sh\n$ npm install babel-plugin-undefined-to-void\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"undefined-to-void\"]\n}\n```\n\n### Via CLI\n\n```sh\n$ babel --plugins undefined-to-void script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"undefined-to-void\"]\n});\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/babel-plugins/babel-plugin-undefined-to-void/issues"
  },
  "homepage": "https://github.com/babel-plugins/babel-plugin-undefined-to-void#readme",
  "_id": "babel-plugin-undefined-to-void@1.1.6",
  "_shasum": "7f578ef8b78dfae6003385d8417a61eda06e2f81",
  "_resolved": "https://registry.npmjs.org/babel-plugin-undefined-to-void/-/babel-plugin-undefined-to-void-1.1.6.tgz",
  "_from": "babel-plugin-undefined-to-void@>=1.1.6 <2.0.0"
}
