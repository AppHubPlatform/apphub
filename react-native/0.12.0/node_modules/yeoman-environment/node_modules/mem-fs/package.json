{
  "name": "mem-fs",
  "version": "1.1.0",
  "description": "Simple in-memory vinyl file store",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sboudrias/mem-fs.git"
  },
  "author": {
    "name": "Simon Boudrias"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "dependencies": {
    "through2": "^0.6.3",
    "vinyl": "^0.4.3",
    "vinyl-file": "^1.1.0"
  },
  "devDependencies": {
    "mocha": "^2.0.1"
  },
  "readme": "mem-fs\n=============\n\nSimple in-memory vinyl file store.\n\n\nUsage\n-------------\n\n### Loading a file\n\nYou access a file using `store#get()` method. If the file is in memory, it will be used. Otherwise, we'll load the file from the file-system.\n\n```js\nvar store = require('mem-fs').create();\n\nstore.get('/test/file.txt');\n```\n\nWhen trying to load a file we cannot read from disk, an empty Vinyl file will be returned. The `contents` of this file will be set to `null`.\n\nTrying to get a directory or any invalid files will also return an empty Vinyl file pointer.\n\n### Adding/updating a file\n\nYou update file references by using `store#add()` method. This method take a `vinyl` file object as parameter.\n\n```js\nvar File = require('vinyl');\nvar store = require('mem-fs').create();\n\nvar coffeeFile = new File({\n  cwd: '/',\n  base: '/test/',\n  path: '/test/file.coffee',\n  contents: new Buffer('test = 123')\n});\n\nstore.add(coffeeFile);\n```\n\n### Iterating over the file system\n\nUsing `store#each(cb(file, index))`, you can iterate over every file stored in the file system.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sboudrias/mem-fs/issues"
  },
  "homepage": "https://github.com/sboudrias/mem-fs#readme",
  "_id": "mem-fs@1.1.0",
  "_shasum": "bf6cc385ef59657783863fc53261ac090d181fcd",
  "_resolved": "https://registry.npmjs.org/mem-fs/-/mem-fs-1.1.0.tgz",
  "_from": "mem-fs@>=1.1.0 <2.0.0"
}
